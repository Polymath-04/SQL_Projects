create database CaseStudy_2;

use CaseStudy_1;

CREATE TABLE Location1(
LOCATION_ID INT PRIMARY KEY,
CITY VARCHAR(20));

INSERT INTO Location1
VALUES
(122, 'NEW YORK'),
(123, 'DALLAS'),
(124, 'CHICAGO'),
(167, 'BOSTON');

CREATE TABLE DEPARTMENT(
DEPARTMENT_ID INT PRIMARY KEY,
NAME VARCHAR(20),
LOCATION_ID INT REFERENCES location1(LOCATION_ID));

INSERT INTO DEPARTMENT
VALUES
(10, 'ACCOUNTING', 122),
(20, 'SALES', 124),
(30, 'RESEARCH', 123),
(40, 'OPERATIONS', 167);

CREATE TABLE JOB(
JOB_ID INT,
DESIGNATION VARCHAR(20))

INSERT INTO JOB 
VALUES
(667,'Clerk'),
(668,'Staff'),
(669,'Analyst'),
(670,'Sales Person'),
(671,'Manager'),
(672,'President');

CREATE TABLE EMPLOYEE (
Employee_ID INT
, Last_Name VARCHAR(20), 
First_Name VARCHAR(20), 
Middle_Name VARCHAR(20),
Job_ID INT, 
Hire_Date DATE,
Salary MONEY, 
Comm INT,
Department_ID INT);

INSERT INTO EMPLOYEE 
VALUES
(7369, 'SMITH', 'JOHN', 'Q', 667, '17-DEC-84', 800, NULL, 20),
(7499, 'ALLEN', 'KEVIN', 'J', 670,'20-FEB-85', 1600, 300, 30),
(755, 'DOYLE', 'JEAN', 'K', 671, '04-APR-85', 2850, NULL, 30),
(756, 'DENNIS', 'LYNN', 'S', 671, '15-MAY-85', 2750, NULL, 30),
(757, 'BAKER', 'LESLIE', 'D', 671, '10-JUN-85', 2200, NULL, 40),
(7521, 'WARK', 'CYNTHIA', 'D', 670, '22-FEB-85', 1250, 50, 30);

SELECT * FROM Location1;

SELECT * FROM DEPARTMENT;

SELECT * FROM JOB;

SELECT * FROM EMPLOYEE;

--/SIMPLE QUERIES

--1

select * from EMPLOYEE

--2

select * from DEPARTMENT

--3

SELECT * FROM JOB;

--4

SELECT * FROM Location1;

--5

select first_name,last_name,salary,comm from EMPLOYEE;

--6

SELECT EMPLOYEE_ID AS 'ID OF THE EMPLOYEE',
LAST_NAME AS 'NAME OF THE EMPLOYEE',
DEPARTMENT_ID AS 'DEP_ID'FROM EMPLOYEE;

--7

sELECT FIRST_NAME+' '+ MIDDLE_NAME +' '+ LAST_NAME AS FULL_NAME,
(SALARY*12) AS ANNUAL_SALARY FROM EMPLOYEE;

--/WHERE CONDITION

--1

SELECT * FROM EMPLOYEE WHERE 'SMITH' IN (FIRST_NAME, LAST_NAME);

--2

SELECT * FROM EMPLOYEE WHERE Department_ID = 20;

--3

SELECT * FROM EMPLOYEE WHERE Salary BETWEEN 3000 AND 4500;

--4

SELECT * FROM EMPLOYEE WHERE DEPARTMENT_ID = 10 OR DEPARTMENT_ID = 20;

--5

SELECT * FROM EMPLOYEE WHERE Department_ID NOT IN (10, 30);

--6

SELECT * FROM EMPLOYEE WHERE First_Name LIKE 'S%';

--7

SELECT * FROM EMPLOYEE
WHERE LAST_NAME LIKE 'S%H';

--8

SELECT * FROM EMPLOYEE 
WHERE First_Name LIKE 'S___';

--9

SELECT * FROM EMPLOYEE
WHERE Department_ID = 10 AND Salary > 3500;


--10

SELECT * FROM EMPLOYEE
WHERE Comm IS NULL;

--/ORDER BY CLAUSE

--1

SELECT EMPLOYEE_ID, LAST_NAME FROM EMPLOYEE
ORDER BY Employee_ID ASC;

--2

SELECT Employee_ID, FIRST_NAME+''+MIDDLE_NAME+''+LAST_NAME 
AS FULLNAME FROM EMPLOYEE
ORDER BY SALARY DESC;

--3

SELECT * FROM EMPLOYEE
ORDER BY LAST_NAME;

--4

SELECT * FROM EMPLOYEE
ORDER BY LAST_NAME, DEPARTMENT_ID DESC;

--/GROUP BY AND HAVING CLAUSE

--1

SELECT DEPARTMENT_ID,COUNT(EMPLOYEE_ID) AS
NO_OF_EMPLOYEES FROM EMPLOYEE
GROUP BY Department_ID;

--2

SELECT DEPARTMENT_ID,MIN(SALARY) AS MIN_SALARY,
MAX(SALARY) AS MAX_SALARY,
AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEE
GROUP BY DEPARTMENT_ID;

--3

SELECT JOB_ID,MAX(SALARY) AS MAX_SALARY,
MIN(SALARY) AS MIN_SALARY,
AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEE GROUP BY JOB_ID;

--4

SELECT MONTH(HIRE_DATE) AS MONTH,
COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES
FROM EMPLOYEE
GROUP BY MONTH(HIRE_DATE);

--5

SELECT MONTH(HIRE_DATE) AS MONTH,
YEAR(HIRE_DATE) AS YEAR,
COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES 
FROM EMPLOYEE
GROUP BY MONTH(HIRE_DATE), YEAR(HIRE_DATE)
ORDER BY YEAR(HIRE_DATE), MONTH(HIRE_DATE) ASC;

--6

SELECT DEPARTMENT_ID FROM EMPLOYEE 
GROUP BY DEPARTMENT_ID
HAVING COUNT(DEPARTMENT_ID) = 4;

--7

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES, 
MONTH(HIRE_DATE) AS MONTH
FROM EMPLOYEE GROUP BY MONTH(HIRE_DATE)
HAVING MONTH(HIRE_DATE) = 1;

--8

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES,
MONTH(HIRE_DATE) AS MONTH
FROM EMPLOYEE GROUP BY MONTH(HIRE_DATE)
HAVING MONTH(HIRE_DATE) IN (1,9);

--9

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES, 
YEAR(HIRE_DATE) AS YEAR FROM EMPLOYEE
GROUP BY YEAR(HIRE_DATE)HAVING YEAR(HIRE_DATE) = 1985;

--10

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES,
MONTH(HIRE_DATE) AS MONTH,
YEAR(HIRE_DATE) AS YEAR FROM EMPLOYEE
GROUP BY MONTH(HIRE_DATE), YEAR(HIRE_DATE)HAVING YEAR(HIRE_DATE) = 1985;

--11

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES,
MONTH(HIRE_DATE) AS MONTH,
YEAR(HIRE_DATE) AS YEAR FROM EMPLOYEE
GROUP BY MONTH(HIRE_DATE), YEAR(HIRE_DATE)
HAVING MONTH(HIRE_DATE) = 3 AND YEAR(HIRE_DATE) = 1985;

--12

SELECT DEPARTMENT_ID,MONTH(HIRE_DATE) AS MONTH,
YEAR(HIRE_DATE) AS YEAR FROM EMPLOYEE
GROUP BY Department_ID, MONTH(HIRE_DATE), YEAR(HIRE_DATE)
HAVING MONTH(HIRE_DATE) = 4 AND YEAR(HIRE_DATE) = 1985AND COUNT(*) >= 3;

--/ JOINS

--1

SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

SELECT E.EMPLOYEE_ID,
E.FIRST_NAME+''+E.MIDDLE_NAME+''+E.LAST_NAME AS FULLNAME,
E.DEPARTMENT_ID,D.NAME FROM EMPLOYEE E 
INNER JOIN 
DEPARTMENT D ON E.Department_ID = D.DEPARTMENT_ID;

--2

SELECT * FROM EMPLOYEE;
SELECT * FROM JOB;

SELECT E.EMPLOYEE_ID,
J.JOB_ID,E.FIRST_NAME+''+E.MIDDLE_NAME+''+E.LAST_NAME 
AS FULLNAME FROM EMPLOYEE E 
INNER JOIN
JOB J ON E.JOB_ID = J.JOB_ID;

--3

SELECT * FROM Location1;
SELECT * FROM DEPARTMENT;
SELECT * FROM JOB;
SELECT * FROM EMPLOYEE;

SELECT E.EMPLOYEE_ID,E.FIRST_NAME+''+E.MIDDLE_NAME+''+E.LAST_NAME AS FULLNAME,
D.DEPARTMENT_ID,D.NAME,L.LOCATION_ID,L.CITY FROM DEPARTMENT D 
INNER JOIN
EMPLOYEE E ON E.Department_ID = D.DEPARTMENT_ID 
INNER JOIN
Location1 L ON D.LOCATION_ID = L.LOCATION_ID;

--4

SELECT D.NAME,COUNT(E.EMPLOYEE_ID) AS NO_OF_EMPLOYEES 
FROM EMPLOYEE E 
INNER JOIN
DEPARTMENT D ON E.Department_ID = D.DEPARTMENT_ID
GROUP BY D.NAME;

--5

SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

SELECT COUNT(E.EMPLOYEE_ID) AS NO_OF_EMPLOYEES,
D.NAME FROM EMPLOYEE E 
INNER JOIN 
DEPARTMENT D ON D.DEPARTMENT_ID = E.Department_ID
GROUP BY D.NAME HAVING D.NAME = 'SALES';

--6

SELECT D.NAME,E.Department_ID,
COUNT(E.DEPARTMENT_ID) AS TOTAL_EMPLOYEES 
FROM DEPARTMENT D 
INNER JOIN 
EMPLOYEE E ON D.DEPARTMENT_ID = E.Department_ID
GROUP BY D.NAME, E.Department_ID
HAVING COUNT(E.Department_ID) >= 4;

--7

SELECT * FROM JOB; 
SELECT * FROM EMPLOYEE;

SELECT E.JOB_ID ,J.DESIGNATION,
COUNT(E.JOB_ID) AS NO_OF_EMPLOYEES FROM JOB J 
INNER JOIN EMPLOYEE E ON J.JOB_ID = E.Job_ID
GROUP BY E.JOB_ID, J. DESIGNATION;

--8

SELECT * FROM EMPLOYEE;
SELECT * FROM location1;
SELECT * FROM DEPARTMENT;

SELECT L.CITY,D.LOCATION_ID,E.DEPARTMENT_ID,
COUNT(D.LOCATION_ID) AS TOTAL_EMPLOYEES FROM DEPARTMENT D 
INNER JOIN 
EMPLOYEE E ON D.DEPARTMENT_ID = E.Department_ID 
INNER JOIN
location1 L ON L.LOCATION_ID = D.LOCATION_ID 
GROUP BY D.LOCATION_ID, L.CITY, E.DEPARTMENT_ID
HAVING L.CITY = 'NEW YORK';

--9

SELECT FIRST_NAME+''+MIDDLE_NAME+''+LAST_NAME AS FULLNAME,SALARY,
CASE 
WHEN SALARY BETWEEN 0 AND 800 THEN 'GRADE1'
WHEN SALARY BETWEEN 801 AND 1300 THEN 'GRADE2'
WHEN SALARY BETWEEN 1301 AND 2199 THEN 'GRADE3'
WHEN SALARY BETWEEN 2200 AND 2749 THEN 'GRADE4'
ELSE 'GRADE5'END AS GRADE FROM EMPLOYEE;

--10

WITH CTE AS(
SELECT FIRST_NAME+''+MIDDLE_NAME+''+LAST_NAME AS FULLNAME,SALARY,
CASE
WHEN SALARY BETWEEN 0 AND 800 THEN 'GRADE1'
WHEN SALARY BETWEEN 801 AND 1300 THEN 'GRADE2'
WHEN SALARY BETWEEN 1301 AND 2199 THEN 'GRADE3'
WHEN SALARY BETWEEN 2200 AND 2749 THEN 'GRADE4'
ELSE 'GRADE5'END AS GRADE FROM EMPLOYEE)
SELECT GRADE,COUNT(GRADE) AS TOTAL_GRADE FROM CTE GROUP BY GRADE;

--11



--12

SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

SELECT * FROM EMPLOYEE E 
INNER JOIN 
DEPARTMENT D ON E.Department_ID = D.DEPARTMENT_ID
WHERE D.NAME IN ('SALES', 'OPERATIONS');

--

--/ SET OPERATORES

--1

SELECT * FROM JOB
WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEE
WHERE Department_ID = (SELECT Department_ID FROM DEPARTMENT
WHERE NAME = 'SALES'))
UNION 
SELECT * FROM JOB WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEE
WHERE Department_ID = (SELECT Department_ID FROM DEPARTMENT 
WHERE NAME = 'ACCOUNTING'));

--2

SELECT * FROM JOB
WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEE
WHERE Department_ID = (SELECT Department_ID FROM DEPARTMENT
WHERE NAME = 'SALES'))
UNION ALL 
SELECT * FROM JOB
WHERE JOB_ID IN (SELECT JOB_ID FROM EMPLOYEE
WHERE Department_ID = (SELECT Department_ID FROM DEPARTMENT
WHERE NAME = 'ACCOUNTING'));

--3

SELECT J.JOB_ID,J.DESIGNATION FROM EMPLOYEE E 
INNER JOIN
JOB J ON J.JOB_ID = E.Job_ID
INNER JOIN DEPARTMENT D ON D.DEPARTMENT_ID =E.Department_ID
WHERE D.NAME='RESEARCH'INTERSECT
SELECT J.JOB_ID,J.DESIGNATION
FROM EMPLOYEE E INNER JOIN JOB J ON J.JOB_ID = E.Job_ID
INNER JOIN DEPARTMENT D ON D.DEPARTMENT_ID =E.Department_ID
WHERE D.NAME='ACCOUNTING'ORDER BY J.JOB_ID;

--/SUB  QUERIES

--1

SELECT * FROM EMPLOYEE
WHERE SALARY IN (SELECT MAX(SALARY) FROM EMPLOYEE)

--2

SELECT * FROM EMPLOYEE
WHERE Department_ID IN
(SELECT Department_ID FROM DEPARTMENT WHERE NAME = 'SALES');

--3

SELECT * FROM EMPLOYEE 
WHERE JOB_ID IN (SELECT JOB_ID FROM JOB WHERE DESIGNATION = 'CLERK');

--4

SELECT * FROM EMPLOYEE 
WHERE Department_ID IN (SELECT Department_ID FROM DEPARTMENT
WHERE LOCATION_ID IN (SELECT LOCATION_ID FROM LOCATION1 
WHERE CITY = 'NEW YORK'));

--5

SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

SELECT COUNT(EMPLOYEE_ID) AS NO_OF_EMPLOYEES_FROM_SALES FROM EMPLOYEE
WHERE DEPARTMENT_ID IN 
(SELECT Department_ID FROM DEPARTMENT WHERE NAME = 'SALES');

--6

UPDATE EMPLOYEE 
SET SALARY = (SALARY+SALARY*0.1)
WHERE JOB_ID IN (SELECT JOB_ID FROM JOB
WHERE DESIGNATION = 'CLERK');
SELECT * FROM EMPLOYEE

--7

DELETE FROM EMPLOYEE
WHERE Department_ID IN 
(SELECT Department_ID FROM DEPARTMENT
WHERE NAME = 'ACCOUNTING');

--8

SELECT MAX(SALARY) AS SECOND_HIGHEST_SALARY FROM EMPLOYEE
WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEE)

--9

--LET THE NTH VALUE BE 3
SELECT * FROM EMPLOYEE
WHERE SALARY = (SELECT TOP 1 SALARY FROM
(SELECT TOP 3 SALARY FROM EMPLOYEE 
ORDER BY SALARY DESC)AS NTH_HIGHEST_SALARY);

--10

SELECT * FROM EMPLOYEE
WHERE SALARY > (SELECT MAX(SALARY) FROM EMPLOYEE 
WHERE Department_ID = 30);

--11

SELECT * FROM EMPLOYEE
WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEE 
WHERE Department_ID = 30);

--12

SELECT * FROM DEPARTMENT
WHERE DEPARTMENT_ID NOT IN (SELECT DEPARTMENT_ID FROM EMPLOYEE);

--13

SELECT EMPLOYEE_ID,
FIRST_NAME,MIDDLE_NAME,
LAST_NAME,SALARY,EMPLOYEE. Department_ID
,DEPT_AVG.AVG_SALARY 
FROM EMPLOYEE
JOIN
(
SELECT DEPARTMENT_ID, AVG(SALARY) AS AVG_SALARY FROM EMPLOYEE
GROUP BY Department_ID) 
AS DEPT_AVG ON EMPLOYEE.Department_ID = DEPT_AVG.Department_ID
WHERE EMPLOYEE.Salary > DEPT_AVG.AVG_SALARY;

